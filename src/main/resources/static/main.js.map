{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-create/contact-create.component.css","webpack:///./src/app/contact-create/contact-create.component.html","webpack:///./src/app/contact-create/contact-create.component.ts","webpack:///./src/app/contact-detail/contact-detail.component.css","webpack:///./src/app/contact-detail/contact-detail.component.html","webpack:///./src/app/contact-detail/contact-detail.component.ts","webpack:///./src/app/contact-edit/contact-edit.component.css","webpack:///./src/app/contact-edit/contact-edit.component.html","webpack:///./src/app/contact-edit/contact-edit.component.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\r\nimport { ContactCreateComponent } from './contact-create/contact-create.component';\r\nimport { ContactEditComponent } from './contact-edit/contact-edit.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'contact',\r\n    component: ContactComponent,\r\n    data: { title: 'Contact List' }\r\n  },\r\n  {\r\n    path: 'contact-detail/:id',\r\n    component: ContactDetailComponent,\r\n    data: { title: 'Contact Details' }\r\n  },\r\n  {\r\n    path: 'contact-create',\r\n    component: ContactCreateComponent,\r\n    data: { title: 'Create Contact' }\r\n  },\r\n  {\r\n    path: 'contact-edit/:id',\r\n    component: ContactEditComponent,\r\n    data: { title: 'Edit Contact' }\r\n  }\r\n  ,\r\n  { path: '',\r\n    redirectTo: '/contact',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ContactComponent,\r\n    ContactDetailComponent,\r\n    ContactCreateComponent,\r\n    ContactEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n                      RouterModule.forRoot(\r\n                        appRoutes,\r\n                        { enableTracing: true } // <-- debugging purposes only\r\n                      )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Add New Suite</h1>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <form (ngSubmit)=\\\"saveContact()\\\" #contactForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Suite Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.name\\\" name=\\\"name\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Author</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.address\\\" name=\\\"address\\\" required>\\r\\n        </div>\\r\\n       <!--  <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">City</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.city\\\" name=\\\"city\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Phone</label>\\r\\n          <input type=\\\"phone\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.phone\\\" name=\\\"phone\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Email</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.email\\\" name=\\\"email\\\" required>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!contactForm.form.valid\\\">Save</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-contact-create',\r\n  templateUrl: './contact-create.component.html',\r\n  styleUrls: ['./contact-create.component.css']\r\n})\r\nexport class ContactCreateComponent implements OnInit {\r\n\r\n  contact = {};\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  saveContact() {\r\n    this.http.post('/contacts', this.contact)\r\n      .subscribe(res => {\r\n          this.router.navigate(['/contact-detail', res]);\r\n        }, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>{{ contact.name }}</h1>\\r\\n  <dl class=\\\"list\\\">\\r\\n    <dt>Address</dt>\\r\\n    <dd>{{ contact.address }}</dd>\\r\\n    <dt>City</dt>\\r\\n    <dd>{{ contact.city }}</dd>\\r\\n    <dt>Phone</dt>\\r\\n    <dd>{{ contact.phone }}</dd>\\r\\n    <dt>Email</dt>\\r\\n    <dd>{{ contact.email }}</dd>\\r\\n  </dl>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <a [routerLink]=\\\"['/contact-edit', contact.id]\\\" class=\\\"btn btn-success\\\">EDIT</a>\\r\\n    <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteContact(contact.id)\\\">DELETE</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-contact-detail',\r\n  templateUrl: './contact-detail.component.html',\r\n  styleUrls: ['./contact-detail.component.css']\r\n})\r\nexport class ContactDetailComponent implements OnInit {\r\n\r\n  contact = {};\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.getContactDetail(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getContactDetail(id) {\r\n    this.http.get('/contacts/'+id).subscribe(data => {\r\n      this.contact = data;\r\n    });\r\n  }\r\n\r\n  deleteContact(id) {\r\n    this.http.delete('/contacts/'+id)\r\n      .subscribe(res => {\r\n          this.router.navigate(['/contact']);\r\n        }, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Edit Contact</h1>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <form (ngSubmit)=\\\"updateContact(contact.id)\\\" #contactForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.name\\\" name=\\\"name\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Address</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.address\\\" name=\\\"address\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">City</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.city\\\" name=\\\"city\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Phone</label>\\r\\n          <input type=\\\"phone\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.phone\\\" name=\\\"phone\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Email</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.email\\\" name=\\\"email\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!contactForm.form.valid\\\">Update</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-contact-edit',\r\n  templateUrl: './contact-edit.component.html',\r\n  styleUrls: ['./contact-edit.component.css']\r\n})\r\nexport class ContactEditComponent implements OnInit {\r\n\r\n  contact = {};\r\n\r\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.getContact(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getContact(id) {\r\n    this.http.get('/contacts/'+id).subscribe(data => {\r\n      this.contact = data;\r\n    });\r\n  }\r\n\r\n  updateContact(id, data) {\r\n    this.http.put('/contacts/'+id, data)\r\n      .subscribe(res => {\r\n          let id = res['id'];\r\n          this.router.navigate(['/contact-detail', id]);\r\n        }, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Test Suite\\r\\n    <a [routerLink]=\\\"['/contact-create']\\\" class=\\\"btn btn-default btn-lg\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    </a>\\r\\n  </h1>\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th>Suite Name</th>\\r\\n      <th>Author</th>\\r\\n      <!-- <th>Email</th> -->\\r\\n      <th>Action</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let contact of contacts\\\">\\r\\n      <!--<td>{{ contact.title }}</td>-->\\r\\n      <td>{{ contact.name }}</td>\\r\\n      <td>{{ contact.city }}</td>\\r\\n      <!-- <td>{{ contact.email }}</td> -->\\r\\n      <td><a [routerLink]=\\\"['/contact-detail', contact.id]\\\">Show Detail</a></td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\ncontacts: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n   this.http.get('/contacts').subscribe(data => {\r\n      this.contacts = data;\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}